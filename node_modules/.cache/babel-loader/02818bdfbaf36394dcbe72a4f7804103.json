{"ast":null,"code":"import { INCREMENT, DECREMENT } from '../action/counterAction';\nconst INITIAL_STATE = {\n  count: 0,\n  name: 'Eric'\n};\n\nconst countReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT:\n      return { ...state,\n        count: state.count + 1\n      };\n\n    case DECREMENT:\n      return { ...state,\n        count: state.count - 1\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default countReducer;","map":{"version":3,"names":["INCREMENT","DECREMENT","INITIAL_STATE","count","name","countReducer","state","action","type"],"sources":["/Users/truongtantrung/SEP_GAPP_GSP24SE58/src/redux/reducer/counterReducer.js"],"sourcesContent":["\r\nimport { INCREMENT, DECREMENT } from '../action/counterAction';\r\nconst INITIAL_STATE = {\r\n    count: 0,\r\n    name: 'Eric'\r\n};\r\nconst countReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case INCREMENT:\r\n            return {\r\n                ...state, count: state.count + 1,\r\n            };\r\n\r\n        case DECREMENT:\r\n            return {\r\n                ...state, count: state.count - 1,\r\n            };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default countReducer;"],"mappings":"AACA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,yBAArC;AACA,MAAMC,aAAa,GAAG;EAClBC,KAAK,EAAE,CADW;EAElBC,IAAI,EAAE;AAFY,CAAtB;;AAIA,MAAMC,YAAY,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BJ,aAA0B;EAAA,IAAXK,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKR,SAAL;MACI,OAAO,EACH,GAAGM,KADA;QACOH,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;MAD5B,CAAP;;IAIJ,KAAKF,SAAL;MACI,OAAO,EACH,GAAGK,KADA;QACOH,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;MAD5B,CAAP;;IAGJ;MAAS,OAAOG,KAAP;EAVb;AAYH,CAbD;;AAeA,eAAeD,YAAf"},"metadata":{},"sourceType":"module"}